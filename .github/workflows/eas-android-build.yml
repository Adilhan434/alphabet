name: Build Android APK via EAS

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install jq and curl
        run: |
          sudo apt-get update && sudo apt-get install -y jq curl

      - name: Install dependencies
        run: npm ci

      - name: EAS build (Android APK)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          set -euo pipefail
          npm install -g eas-cli@^3.0.0
          # Run EAS build and capture JSON output
          build_json=$(eas build --platform android --profile production --non-interactive --wait --json)
          echo "$build_json" > build.json
          # Try several possible JSON shapes to extract the artifact URL
          artifact_url=$(echo "$build_json" | jq -r '.artifact?.url // .artifacts?.[0]?.url // .builds?[0]?.artifacts?.[0]?.url // .url // empty')
          if [ -z "$artifact_url" ]; then
            echo "Could not find artifact URL in build output. Dumping build.json:" >&2
            cat build.json >&2
            exit 1
          fi
          echo "Artifact URL: $artifact_url"
          mkdir -p ./apk
          curl -L -o ./apk/alphabet.apk "$artifact_url"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: build-${{ github.run_id }}
          release_name: Android build ${{ github.run_id }}
          body: "EAS build artifacts for run ${{ github.run_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apk/alphabet.apk
          asset_name: alphabet.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output download URL
        run: |
          echo "Release: https://github.com/${{ github.repository }}/releases/tag/build-${{ github.run_id }}"
